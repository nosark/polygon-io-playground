<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1141.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="384"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (1 samples, 0.26%)</title><rect x="0.0000%" y="1077" width="0.2604%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.26%)</title><rect x="0.0000%" y="1061" width="0.2604%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setname_np (1 samples, 0.26%)</title><rect x="0.2604%" y="1045" width="0.2604%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.5104%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.26%)</title><rect x="0.2604%" y="1029" width="0.2604%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.5104%" y="1039.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.26%)</title><rect x="0.7812%" y="949" width="0.2604%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="1.0312%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (18 samples, 4.69%)</title><rect x="1.3021%" y="901" width="4.6875%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="18"/><text x="1.5521%" y="911.50">libsy..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.26%)</title><rect x="6.7708%" y="885" width="0.2604%" height="15" fill="rgb(207,160,47)" fg:x="26" fg:w="1"/><text x="7.0208%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.26%)</title><rect x="6.7708%" y="869" width="0.2604%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="1"/><text x="7.0208%" y="879.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (24 samples, 6.25%)</title><rect x="1.0417%" y="949" width="6.2500%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="24"/><text x="1.2917%" y="959.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`tokio::park::thread::Inner::park (24 samples, 6.25%)</title><rect x="1.0417%" y="933" width="6.2500%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="24"/><text x="1.2917%" y="943.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`parking_lot::condvar::Condvar::wait_until_internal (24 samples, 6.25%)</title><rect x="1.0417%" y="917" width="6.2500%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="24"/><text x="1.2917%" y="927.50">polygon_..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (5 samples, 1.30%)</title><rect x="5.9896%" y="901" width="1.3021%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="5"/><text x="6.2396%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.26%)</title><rect x="7.0313%" y="885" width="0.2604%" height="15" fill="rgb(216,20,37)" fg:x="27" fg:w="1"/><text x="7.2813%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (13 samples, 3.39%)</title><rect x="7.2917%" y="917" width="3.3854%" height="15" fill="rgb(206,188,39)" fg:x="28" fg:w="13"/><text x="7.5417%" y="927.50">pol..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 3.39%)</title><rect x="7.2917%" y="901" width="3.3854%" height="15" fill="rgb(217,207,13)" fg:x="28" fg:w="13"/><text x="7.5417%" y="911.50">lib..</text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 0.26%)</title><rect x="10.6771%" y="629" width="0.2604%" height="15" fill="rgb(231,73,38)" fg:x="41" fg:w="1"/><text x="10.9271%" y="639.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (1 samples, 0.26%)</title><rect x="10.6771%" y="613" width="0.2604%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="1"/><text x="10.9271%" y="623.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (1 samples, 0.26%)</title><rect x="10.6771%" y="597" width="0.2604%" height="15" fill="rgb(210,31,41)" fg:x="41" fg:w="1"/><text x="10.9271%" y="607.50"></text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (1 samples, 0.26%)</title><rect x="10.6771%" y="581" width="0.2604%" height="15" fill="rgb(221,200,47)" fg:x="41" fg:w="1"/><text x="10.9271%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (1 samples, 0.26%)</title><rect x="10.6771%" y="565" width="0.2604%" height="15" fill="rgb(226,26,5)" fg:x="41" fg:w="1"/><text x="10.9271%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check (1 samples, 0.26%)</title><rect x="10.6771%" y="549" width="0.2604%" height="15" fill="rgb(249,33,26)" fg:x="41" fg:w="1"/><text x="10.9271%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign (1 samples, 0.26%)</title><rect x="10.6771%" y="533" width="0.2604%" height="15" fill="rgb(235,183,28)" fg:x="41" fg:w="1"/><text x="10.9271%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="517" width="0.2604%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="1"/><text x="10.9271%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="501" width="0.2604%" height="15" fill="rgb(247,18,42)" fg:x="41" fg:w="1"/><text x="10.9271%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="485" width="0.2604%" height="15" fill="rgb(241,131,45)" fg:x="41" fg:w="1"/><text x="10.9271%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="469" width="0.2604%" height="15" fill="rgb(249,31,29)" fg:x="41" fg:w="1"/><text x="10.9271%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_inner_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="453" width="0.2604%" height="15" fill="rgb(225,111,53)" fg:x="41" fg:w="1"/><text x="10.9271%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (1 samples, 0.26%)</title><rect x="10.6771%" y="437" width="0.2604%" height="15" fill="rgb(238,160,17)" fg:x="41" fg:w="1"/><text x="10.9271%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.26%)</title><rect x="10.6771%" y="421" width="0.2604%" height="15" fill="rgb(214,148,48)" fg:x="41" fg:w="1"/><text x="10.9271%" y="431.50"></text></g><g><title>Security`Security::MetaRecord::setRecordAttributeInfo (1 samples, 0.26%)</title><rect x="10.9375%" y="261" width="0.2604%" height="15" fill="rgb(232,36,49)" fg:x="42" fg:w="1"/><text x="11.1875%" y="271.50"></text></g><g><title>libc+ (1 samples, 0.26%)</title><rect x="10.9375%" y="245" width="0.2604%" height="15" fill="rgb(209,103,24)" fg:x="42" fg:w="1"/><text x="11.1875%" y="255.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (2 samples, 0.52%)</title><rect x="10.9375%" y="341" width="0.5208%" height="15" fill="rgb(229,88,8)" fg:x="42" fg:w="2"/><text x="11.1875%" y="351.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (2 samples, 0.52%)</title><rect x="10.9375%" y="325" width="0.5208%" height="15" fill="rgb(213,181,19)" fg:x="42" fg:w="2"/><text x="11.1875%" y="335.50"></text></g><g><title>Security`Security::Database::_dbOpen (2 samples, 0.52%)</title><rect x="10.9375%" y="309" width="0.5208%" height="15" fill="rgb(254,191,54)" fg:x="42" fg:w="2"/><text x="11.1875%" y="319.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (2 samples, 0.52%)</title><rect x="10.9375%" y="293" width="0.5208%" height="15" fill="rgb(241,83,37)" fg:x="42" fg:w="2"/><text x="11.1875%" y="303.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (2 samples, 0.52%)</title><rect x="10.9375%" y="277" width="0.5208%" height="15" fill="rgb(233,36,39)" fg:x="42" fg:w="2"/><text x="11.1875%" y="287.50"></text></g><g><title>Security`Security::TrackingAllocator::reset (1 samples, 0.26%)</title><rect x="11.1979%" y="261" width="0.2604%" height="15" fill="rgb(226,3,54)" fg:x="43" fg:w="1"/><text x="11.4479%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.26%)</title><rect x="11.1979%" y="245" width="0.2604%" height="15" fill="rgb(245,192,40)" fg:x="43" fg:w="1"/><text x="11.4479%" y="255.50"></text></g><g><title>Security`Security::MDSAttrParser::MDSAttrParser (1 samples, 0.26%)</title><rect x="11.4583%" y="293" width="0.2604%" height="15" fill="rgb(238,167,29)" fg:x="44" fg:w="1"/><text x="11.7083%" y="303.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.26%)</title><rect x="11.4583%" y="277" width="0.2604%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="1"/><text x="11.7083%" y="287.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.26%)</title><rect x="11.4583%" y="261" width="0.2604%" height="15" fill="rgb(231,60,39)" fg:x="44" fg:w="1"/><text x="11.7083%" y="271.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.26%)</title><rect x="11.4583%" y="245" width="0.2604%" height="15" fill="rgb(208,69,12)" fg:x="44" fg:w="1"/><text x="11.7083%" y="255.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.26%)</title><rect x="11.4583%" y="229" width="0.2604%" height="15" fill="rgb(235,93,37)" fg:x="44" fg:w="1"/><text x="11.7083%" y="239.50"></text></g><g><title>CoreFoundation`CFURLCreateDataAndPropertiesFromResource (1 samples, 0.26%)</title><rect x="11.4583%" y="213" width="0.2604%" height="15" fill="rgb(213,116,39)" fg:x="44" fg:w="1"/><text x="11.7083%" y="223.50"></text></g><g><title>CoreFoundation`_CFReadBytesFromFile (1 samples, 0.26%)</title><rect x="11.4583%" y="197" width="0.2604%" height="15" fill="rgb(222,207,29)" fg:x="44" fg:w="1"/><text x="11.7083%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.26%)</title><rect x="11.4583%" y="181" width="0.2604%" height="15" fill="rgb(206,96,30)" fg:x="44" fg:w="1"/><text x="11.7083%" y="191.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (2 samples, 0.52%)</title><rect x="11.4583%" y="325" width="0.5208%" height="15" fill="rgb(218,138,4)" fg:x="44" fg:w="2"/><text x="11.7083%" y="335.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (2 samples, 0.52%)</title><rect x="11.4583%" y="309" width="0.5208%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="2"/><text x="11.7083%" y="319.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::directDbHand (1 samples, 0.26%)</title><rect x="11.7188%" y="293" width="0.2604%" height="15" fill="rgb(239,60,40)" fg:x="45" fg:w="1"/><text x="11.9688%" y="303.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (1 samples, 0.26%)</title><rect x="11.7188%" y="277" width="0.2604%" height="15" fill="rgb(206,27,48)" fg:x="45" fg:w="1"/><text x="11.9688%" y="287.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.26%)</title><rect x="11.7188%" y="261" width="0.2604%" height="15" fill="rgb(225,35,8)" fg:x="45" fg:w="1"/><text x="11.9688%" y="271.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.26%)</title><rect x="11.7188%" y="245" width="0.2604%" height="15" fill="rgb(250,213,24)" fg:x="45" fg:w="1"/><text x="11.9688%" y="255.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.26%)</title><rect x="11.7188%" y="229" width="0.2604%" height="15" fill="rgb(247,123,22)" fg:x="45" fg:w="1"/><text x="11.9688%" y="239.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.26%)</title><rect x="11.7188%" y="213" width="0.2604%" height="15" fill="rgb(231,138,38)" fg:x="45" fg:w="1"/><text x="11.9688%" y="223.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.26%)</title><rect x="11.7188%" y="197" width="0.2604%" height="15" fill="rgb(231,145,46)" fg:x="45" fg:w="1"/><text x="11.9688%" y="207.50"></text></g><g><title>Security`Security::MetaRecord::unpackRecord (1 samples, 0.26%)</title><rect x="11.7188%" y="181" width="0.2604%" height="15" fill="rgb(251,118,11)" fg:x="45" fg:w="1"/><text x="11.9688%" y="191.50"></text></g><g><title>Security`Security::MetaAttribute::unpackAttribute (1 samples, 0.26%)</title><rect x="11.7188%" y="165" width="0.2604%" height="15" fill="rgb(217,147,25)" fg:x="45" fg:w="1"/><text x="11.9688%" y="175.50"></text></g><g><title>Security`Security::TrackingAllocator::malloc (1 samples, 0.26%)</title><rect x="11.7188%" y="149" width="0.2604%" height="15" fill="rgb(247,81,37)" fg:x="45" fg:w="1"/><text x="11.9688%" y="159.50"></text></g><g><title>Security`Security::TrackingAllocator::malloc (1 samples, 0.26%)</title><rect x="11.7188%" y="133" width="0.2604%" height="15" fill="rgb(209,12,38)" fg:x="45" fg:w="1"/><text x="11.9688%" y="143.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;void*, std::__1::__tree_node&lt;void*, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;void*, std::__1::less&lt;void*&gt;, std::__1::allocator&lt;void*&gt; &gt;::__emplace_unique_key_args&lt;void*, void* const&amp;&gt; (1 samples, 0.26%)</title><rect x="11.7188%" y="117" width="0.2604%" height="15" fill="rgb(227,1,9)" fg:x="45" fg:w="1"/><text x="11.9688%" y="127.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.26%)</title><rect x="11.7188%" y="101" width="0.2604%" height="15" fill="rgb(248,47,43)" fg:x="45" fg:w="1"/><text x="11.9688%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.26%)</title><rect x="11.7188%" y="85" width="0.2604%" height="15" fill="rgb(221,10,30)" fg:x="45" fg:w="1"/><text x="11.9688%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.26%)</title><rect x="11.7188%" y="69" width="0.2604%" height="15" fill="rgb(210,229,1)" fg:x="45" fg:w="1"/><text x="11.9688%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.26%)</title><rect x="11.7188%" y="53" width="0.2604%" height="15" fill="rgb(222,148,37)" fg:x="45" fg:w="1"/><text x="11.9688%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.26%)</title><rect x="11.7188%" y="37" width="0.2604%" height="15" fill="rgb(234,67,33)" fg:x="45" fg:w="1"/><text x="11.9688%" y="47.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (3 samples, 0.78%)</title><rect x="11.4583%" y="341" width="0.7812%" height="15" fill="rgb(247,98,35)" fg:x="44" fg:w="3"/><text x="11.7083%" y="351.50"></text></g><g><title>Security`countLegacyMDSPlugin (1 samples, 0.26%)</title><rect x="11.9792%" y="325" width="0.2604%" height="15" fill="rgb(247,138,52)" fg:x="46" fg:w="1"/><text x="12.2292%" y="335.50"></text></g><g><title>Foundation`+[NSString stringWithCString:encoding:] (1 samples, 0.26%)</title><rect x="11.9792%" y="309" width="0.2604%" height="15" fill="rgb(213,79,30)" fg:x="46" fg:w="1"/><text x="12.2292%" y="319.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.26%)</title><rect x="11.9792%" y="293" width="0.2604%" height="15" fill="rgb(246,177,23)" fg:x="46" fg:w="1"/><text x="12.2292%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.26%)</title><rect x="11.9792%" y="277" width="0.2604%" height="15" fill="rgb(230,62,27)" fg:x="46" fg:w="1"/><text x="12.2292%" y="287.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.26%)</title><rect x="11.9792%" y="261" width="0.2604%" height="15" fill="rgb(216,154,8)" fg:x="46" fg:w="1"/><text x="12.2292%" y="271.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (6 samples, 1.56%)</title><rect x="10.9375%" y="533" width="1.5625%" height="15" fill="rgb(244,35,45)" fg:x="42" fg:w="6"/><text x="11.1875%" y="543.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (6 samples, 1.56%)</title><rect x="10.9375%" y="517" width="1.5625%" height="15" fill="rgb(251,115,12)" fg:x="42" fg:w="6"/><text x="11.1875%" y="527.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (6 samples, 1.56%)</title><rect x="10.9375%" y="501" width="1.5625%" height="15" fill="rgb(240,54,50)" fg:x="42" fg:w="6"/><text x="11.1875%" y="511.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (6 samples, 1.56%)</title><rect x="10.9375%" y="485" width="1.5625%" height="15" fill="rgb(233,84,52)" fg:x="42" fg:w="6"/><text x="11.1875%" y="495.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (6 samples, 1.56%)</title><rect x="10.9375%" y="469" width="1.5625%" height="15" fill="rgb(207,117,47)" fg:x="42" fg:w="6"/><text x="11.1875%" y="479.50"></text></g><g><title>Security`CSSM_ModuleLoad (6 samples, 1.56%)</title><rect x="10.9375%" y="453" width="1.5625%" height="15" fill="rgb(249,43,39)" fg:x="42" fg:w="6"/><text x="11.1875%" y="463.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (6 samples, 1.56%)</title><rect x="10.9375%" y="437" width="1.5625%" height="15" fill="rgb(209,38,44)" fg:x="42" fg:w="6"/><text x="11.1875%" y="447.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (6 samples, 1.56%)</title><rect x="10.9375%" y="421" width="1.5625%" height="15" fill="rgb(236,212,23)" fg:x="42" fg:w="6"/><text x="11.1875%" y="431.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (6 samples, 1.56%)</title><rect x="10.9375%" y="405" width="1.5625%" height="15" fill="rgb(242,79,21)" fg:x="42" fg:w="6"/><text x="11.1875%" y="415.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (6 samples, 1.56%)</title><rect x="10.9375%" y="389" width="1.5625%" height="15" fill="rgb(211,96,35)" fg:x="42" fg:w="6"/><text x="11.1875%" y="399.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (6 samples, 1.56%)</title><rect x="10.9375%" y="373" width="1.5625%" height="15" fill="rgb(253,215,40)" fg:x="42" fg:w="6"/><text x="11.1875%" y="383.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (6 samples, 1.56%)</title><rect x="10.9375%" y="357" width="1.5625%" height="15" fill="rgb(211,81,21)" fg:x="42" fg:w="6"/><text x="11.1875%" y="367.50"></text></g><g><title>Security`Security::SecurityServer::ClientSession::activate (1 samples, 0.26%)</title><rect x="12.2396%" y="341" width="0.2604%" height="15" fill="rgb(208,190,38)" fg:x="47" fg:w="1"/><text x="12.4896%" y="351.50"></text></g><g><title>Security`Security::ModuleNexus&lt;Security::SecurityServer::ClientSession::Global&gt;::operator() (1 samples, 0.26%)</title><rect x="12.2396%" y="325" width="0.2604%" height="15" fill="rgb(235,213,38)" fg:x="47" fg:w="1"/><text x="12.4896%" y="335.50"></text></g><g><title>Security`Security::ModuleNexusCommon::create(void* (*) (1 samples, 0.26%)</title><rect x="12.2396%" y="309" width="0.2604%" height="15" fill="rgb(237,122,38)" fg:x="47" fg:w="1"/><text x="12.4896%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.26%)</title><rect x="12.2396%" y="293" width="0.2604%" height="15" fill="rgb(244,218,35)" fg:x="47" fg:w="1"/><text x="12.4896%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.26%)</title><rect x="12.2396%" y="277" width="0.2604%" height="15" fill="rgb(240,68,47)" fg:x="47" fg:w="1"/><text x="12.4896%" y="287.50"></text></g><g><title>Security`invocation function for block in Security::ModuleNexusCommon::create(void* (*) (1 samples, 0.26%)</title><rect x="12.2396%" y="261" width="0.2604%" height="15" fill="rgb(210,16,53)" fg:x="47" fg:w="1"/><text x="12.4896%" y="271.50"></text></g><g><title>Security`Security::ModuleNexus&lt;Security::SecurityServer::ClientSession::Global&gt;::make (1 samples, 0.26%)</title><rect x="12.2396%" y="245" width="0.2604%" height="15" fill="rgb(235,124,12)" fg:x="47" fg:w="1"/><text x="12.4896%" y="255.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up2 (1 samples, 0.26%)</title><rect x="12.2396%" y="229" width="0.2604%" height="15" fill="rgb(224,169,11)" fg:x="47" fg:w="1"/><text x="12.4896%" y="239.50"></text></g><g><title>libxpc.dylib`bootstrap_look_up3 (1 samples, 0.26%)</title><rect x="12.2396%" y="213" width="0.2604%" height="15" fill="rgb(250,166,2)" fg:x="47" fg:w="1"/><text x="12.4896%" y="223.50"></text></g><g><title>libxpc.dylib`_bootstrap_create_request (1 samples, 0.26%)</title><rect x="12.2396%" y="197" width="0.2604%" height="15" fill="rgb(242,216,29)" fg:x="47" fg:w="1"/><text x="12.4896%" y="207.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_set_mach_send (1 samples, 0.26%)</title><rect x="12.2396%" y="181" width="0.2604%" height="15" fill="rgb(230,116,27)" fg:x="47" fg:w="1"/><text x="12.4896%" y="191.50"></text></g><g><title>libxpc.dylib`xpc_mach_send_create_with_disposition (1 samples, 0.26%)</title><rect x="12.2396%" y="165" width="0.2604%" height="15" fill="rgb(228,99,48)" fg:x="47" fg:w="1"/><text x="12.4896%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (1 samples, 0.26%)</title><rect x="12.2396%" y="149" width="0.2604%" height="15" fill="rgb(253,11,6)" fg:x="47" fg:w="1"/><text x="12.4896%" y="159.50"></text></g><g><title>Security`tls_handshake_message_callback (7 samples, 1.82%)</title><rect x="10.9375%" y="597" width="1.8229%" height="15" fill="rgb(247,143,39)" fg:x="42" fg:w="7"/><text x="11.1875%" y="607.50">S..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (7 samples, 1.82%)</title><rect x="10.9375%" y="581" width="1.8229%" height="15" fill="rgb(236,97,10)" fg:x="42" fg:w="7"/><text x="11.1875%" y="591.50">l..</text></g><g><title>Security`SecTrustCopyPublicKey (7 samples, 1.82%)</title><rect x="10.9375%" y="565" width="1.8229%" height="15" fill="rgb(233,208,19)" fg:x="42" fg:w="7"/><text x="11.1875%" y="575.50">S..</text></g><g><title>Security`SecCertificateCopyPublicKey (7 samples, 1.82%)</title><rect x="10.9375%" y="549" width="1.8229%" height="15" fill="rgb(216,164,2)" fg:x="42" fg:w="7"/><text x="11.1875%" y="559.50">S..</text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.26%)</title><rect x="12.5000%" y="533" width="0.2604%" height="15" fill="rgb(220,129,5)" fg:x="48" fg:w="1"/><text x="12.7500%" y="543.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (9 samples, 2.34%)</title><rect x="10.6771%" y="709" width="2.3438%" height="15" fill="rgb(242,17,10)" fg:x="41" fg:w="9"/><text x="10.9271%" y="719.50">p..</text></g><g><title>polygon_io_crypto_playground`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (9 samples, 2.34%)</title><rect x="10.6771%" y="693" width="2.3438%" height="15" fill="rgb(242,107,0)" fg:x="41" fg:w="9"/><text x="10.9271%" y="703.50">p..</text></g><g><title>polygon_io_crypto_playground`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (9 samples, 2.34%)</title><rect x="10.6771%" y="677" width="2.3438%" height="15" fill="rgb(251,28,31)" fg:x="41" fg:w="9"/><text x="10.9271%" y="687.50">p..</text></g><g><title>Security`SSLHandshake (9 samples, 2.34%)</title><rect x="10.6771%" y="661" width="2.3438%" height="15" fill="rgb(233,223,10)" fg:x="41" fg:w="9"/><text x="10.9271%" y="671.50">S..</text></g><g><title>Security`SSLHandshakeProceed (9 samples, 2.34%)</title><rect x="10.6771%" y="645" width="2.3438%" height="15" fill="rgb(215,21,27)" fg:x="41" fg:w="9"/><text x="10.9271%" y="655.50">S..</text></g><g><title>libcoretls.dylib`tls_handshake_process (8 samples, 2.08%)</title><rect x="10.9375%" y="629" width="2.0833%" height="15" fill="rgb(232,23,21)" fg:x="42" fg:w="8"/><text x="11.1875%" y="639.50">l..</text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (8 samples, 2.08%)</title><rect x="10.9375%" y="613" width="2.0833%" height="15" fill="rgb(244,5,23)" fg:x="42" fg:w="8"/><text x="11.1875%" y="623.50">l..</text></g><g><title>Security`tls_verify_peer_cert (1 samples, 0.26%)</title><rect x="12.7604%" y="597" width="0.2604%" height="15" fill="rgb(226,81,46)" fg:x="49" fg:w="1"/><text x="13.0104%" y="607.50"></text></g><g><title>Security`sslCreateSecTrust (1 samples, 0.26%)</title><rect x="12.7604%" y="581" width="0.2604%" height="15" fill="rgb(247,70,30)" fg:x="49" fg:w="1"/><text x="13.0104%" y="591.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_peer_trust (1 samples, 0.26%)</title><rect x="12.7604%" y="565" width="0.2604%" height="15" fill="rgb(212,68,19)" fg:x="49" fg:w="1"/><text x="13.0104%" y="575.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (1 samples, 0.26%)</title><rect x="12.7604%" y="549" width="0.2604%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="1"/><text x="13.0104%" y="559.50"></text></g><g><title>Security`SecCertificateCreateWithData (1 samples, 0.26%)</title><rect x="12.7604%" y="533" width="0.2604%" height="15" fill="rgb(223,113,26)" fg:x="49" fg:w="1"/><text x="13.0104%" y="543.50"></text></g><g><title>Security`SecCertificateParse (1 samples, 0.26%)</title><rect x="12.7604%" y="517" width="0.2604%" height="15" fill="rgb(206,192,2)" fg:x="49" fg:w="1"/><text x="13.0104%" y="527.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (1 samples, 0.26%)</title><rect x="12.7604%" y="501" width="0.2604%" height="15" fill="rgb(241,108,4)" fg:x="49" fg:w="1"/><text x="13.0104%" y="511.50"></text></g><g><title>Security`DERDecodeSeqNext (1 samples, 0.26%)</title><rect x="12.7604%" y="485" width="0.2604%" height="15" fill="rgb(247,173,49)" fg:x="49" fg:w="1"/><text x="13.0104%" y="495.50"></text></g><g><title>polygon_io_crypto_playground`security_framework::secure_transport::ClientBuilder::configure_protocols (1 samples, 0.26%)</title><rect x="13.0208%" y="677" width="0.2604%" height="15" fill="rgb(224,114,35)" fg:x="50" fg:w="1"/><text x="13.2708%" y="687.50"></text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="853" width="2.8646%" height="15" fill="rgb(245,159,27)" fg:x="41" fg:w="11"/><text x="10.9271%" y="863.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="837" width="2.8646%" height="15" fill="rgb(245,172,44)" fg:x="41" fg:w="11"/><text x="10.9271%" y="847.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="821" width="2.8646%" height="15" fill="rgb(236,23,11)" fg:x="41" fg:w="11"/><text x="10.9271%" y="831.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="805" width="2.8646%" height="15" fill="rgb(205,117,38)" fg:x="41" fg:w="11"/><text x="10.9271%" y="815.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="789" width="2.8646%" height="15" fill="rgb(237,72,25)" fg:x="41" fg:w="11"/><text x="10.9271%" y="799.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="773" width="2.8646%" height="15" fill="rgb(244,70,9)" fg:x="41" fg:w="11"/><text x="10.9271%" y="783.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="757" width="2.8646%" height="15" fill="rgb(217,125,39)" fg:x="41" fg:w="11"/><text x="10.9271%" y="767.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="741" width="2.8646%" height="15" fill="rgb(235,36,10)" fg:x="41" fg:w="11"/><text x="10.9271%" y="751.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 2.86%)</title><rect x="10.6771%" y="725" width="2.8646%" height="15" fill="rgb(251,123,47)" fg:x="41" fg:w="11"/><text x="10.9271%" y="735.50">po..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.52%)</title><rect x="13.0208%" y="709" width="0.5208%" height="15" fill="rgb(221,13,13)" fg:x="50" fg:w="2"/><text x="13.2708%" y="719.50"></text></g><g><title>polygon_io_crypto_playground`native_tls::imp::TlsConnector::connect (2 samples, 0.52%)</title><rect x="13.0208%" y="693" width="0.5208%" height="15" fill="rgb(238,131,9)" fg:x="50" fg:w="2"/><text x="13.2708%" y="703.50"></text></g><g><title>polygon_io_crypto_playground`security_framework::secure_transport::ClientBuilder::handshake (1 samples, 0.26%)</title><rect x="13.2813%" y="677" width="0.2604%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="1"/><text x="13.5313%" y="687.50"></text></g><g><title>Security`SSLCreateContext (1 samples, 0.26%)</title><rect x="13.2813%" y="661" width="0.2604%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="1"/><text x="13.5313%" y="671.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (1 samples, 0.26%)</title><rect x="13.2813%" y="645" width="0.2604%" height="15" fill="rgb(242,14,37)" fg:x="51" fg:w="1"/><text x="13.5313%" y="655.50"></text></g><g><title>libcoretls.dylib`tls_handshake_create (1 samples, 0.26%)</title><rect x="13.2813%" y="629" width="0.2604%" height="15" fill="rgb(246,228,12)" fg:x="51" fg:w="1"/><text x="13.5313%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_sigalgs (1 samples, 0.26%)</title><rect x="13.2813%" y="613" width="0.2604%" height="15" fill="rgb(213,55,15)" fg:x="51" fg:w="1"/><text x="13.5313%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.26%)</title><rect x="13.2813%" y="597" width="0.2604%" height="15" fill="rgb(209,9,3)" fg:x="51" fg:w="1"/><text x="13.5313%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.26%)</title><rect x="13.2813%" y="581" width="0.2604%" height="15" fill="rgb(230,59,30)" fg:x="51" fg:w="1"/><text x="13.5313%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.26%)</title><rect x="13.2813%" y="565" width="0.2604%" height="15" fill="rgb(209,121,21)" fg:x="51" fg:w="1"/><text x="13.5313%" y="575.50"></text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (12 samples, 3.12%)</title><rect x="10.6771%" y="917" width="3.1250%" height="15" fill="rgb(220,109,13)" fg:x="41" fg:w="12"/><text x="10.9271%" y="927.50">pol..</text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (12 samples, 3.12%)</title><rect x="10.6771%" y="901" width="3.1250%" height="15" fill="rgb(232,18,1)" fg:x="41" fg:w="12"/><text x="10.9271%" y="911.50">pol..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (12 samples, 3.12%)</title><rect x="10.6771%" y="885" width="3.1250%" height="15" fill="rgb(215,41,42)" fg:x="41" fg:w="12"/><text x="10.9271%" y="895.50">pol..</text></g><g><title>polygon_io_crypto_playground`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 3.12%)</title><rect x="10.6771%" y="869" width="3.1250%" height="15" fill="rgb(224,123,36)" fg:x="41" fg:w="12"/><text x="10.9271%" y="879.50">pol..</text></g><g><title>polygon_io_crypto_playground`hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (1 samples, 0.26%)</title><rect x="13.5417%" y="853" width="0.2604%" height="15" fill="rgb(240,125,3)" fg:x="52" fg:w="1"/><text x="13.7917%" y="863.50"></text></g><g><title>polygon_io_crypto_playground`tokio::sync::oneshot::channel (1 samples, 0.26%)</title><rect x="13.5417%" y="837" width="0.2604%" height="15" fill="rgb(205,98,50)" fg:x="52" fg:w="1"/><text x="13.7917%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.26%)</title><rect x="15.1042%" y="805" width="0.2604%" height="15" fill="rgb(205,185,37)" fg:x="58" fg:w="1"/><text x="15.3542%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (4 samples, 1.04%)</title><rect x="15.3646%" y="805" width="1.0417%" height="15" fill="rgb(238,207,15)" fg:x="59" fg:w="4"/><text x="15.6146%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.78%)</title><rect x="15.6250%" y="789" width="0.7812%" height="15" fill="rgb(213,199,42)" fg:x="60" fg:w="3"/><text x="15.8750%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.78%)</title><rect x="15.6250%" y="773" width="0.7812%" height="15" fill="rgb(235,201,11)" fg:x="60" fg:w="3"/><text x="15.8750%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.26%)</title><rect x="16.4062%" y="773" width="0.2604%" height="15" fill="rgb(207,46,11)" fg:x="63" fg:w="1"/><text x="16.6562%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.26%)</title><rect x="16.4062%" y="757" width="0.2604%" height="15" fill="rgb(241,35,35)" fg:x="63" fg:w="1"/><text x="16.6562%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 3.12%)</title><rect x="16.6667%" y="773" width="3.1250%" height="15" fill="rgb(243,32,47)" fg:x="64" fg:w="12"/><text x="16.9167%" y="783.50">pol..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (12 samples, 3.12%)</title><rect x="16.6667%" y="757" width="3.1250%" height="15" fill="rgb(247,202,23)" fg:x="64" fg:w="12"/><text x="16.9167%" y="767.50">lib..</text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::async_impl::decoder::Decoder as http_body::Body&gt;::poll_data (24 samples, 6.25%)</title><rect x="13.8021%" y="917" width="6.2500%" height="15" fill="rgb(219,102,11)" fg:x="53" fg:w="24"/><text x="14.0521%" y="927.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (24 samples, 6.25%)</title><rect x="13.8021%" y="901" width="6.2500%" height="15" fill="rgb(243,110,44)" fg:x="53" fg:w="24"/><text x="14.0521%" y="911.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (23 samples, 5.99%)</title><rect x="14.0625%" y="885" width="5.9896%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="23"/><text x="14.3125%" y="895.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (23 samples, 5.99%)</title><rect x="14.0625%" y="869" width="5.9896%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="23"/><text x="14.3125%" y="879.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`hyper::body::body::Body::poll_inner (22 samples, 5.73%)</title><rect x="14.3229%" y="853" width="5.7292%" height="15" fill="rgb(226,22,26)" fg:x="55" fg:w="22"/><text x="14.5729%" y="863.50">polygon..</text></g><g><title>polygon_io_crypto_playground`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 4.95%)</title><rect x="15.1042%" y="837" width="4.9479%" height="15" fill="rgb(217,163,10)" fg:x="58" fg:w="19"/><text x="15.3542%" y="847.50">polygo..</text></g><g><title>polygon_io_crypto_playground`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (19 samples, 4.95%)</title><rect x="15.1042%" y="821" width="4.9479%" height="15" fill="rgb(213,25,53)" fg:x="58" fg:w="19"/><text x="15.3542%" y="831.50">polygo..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::waker::wake_by_val (14 samples, 3.65%)</title><rect x="16.4062%" y="805" width="3.6458%" height="15" fill="rgb(252,105,26)" fg:x="63" fg:w="14"/><text x="16.6562%" y="815.50">poly..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::worker::Shared&gt;&gt;::schedule (14 samples, 3.65%)</title><rect x="16.4062%" y="789" width="3.6458%" height="15" fill="rgb(220,39,43)" fg:x="63" fg:w="14"/><text x="16.6562%" y="799.50">poly..</text></g><g><title>polygon_io_crypto_playground`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.26%)</title><rect x="19.7917%" y="773" width="0.2604%" height="15" fill="rgb(229,68,48)" fg:x="76" fg:w="1"/><text x="20.0417%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::inject::Inject&lt;T&gt;::push (1 samples, 0.26%)</title><rect x="19.7917%" y="757" width="0.2604%" height="15" fill="rgb(252,8,32)" fg:x="76" fg:w="1"/><text x="20.0417%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`bytes::bytes_mut::shared_v_drop (1 samples, 0.26%)</title><rect x="20.0521%" y="917" width="0.2604%" height="15" fill="rgb(223,20,43)" fg:x="77" fg:w="1"/><text x="20.3021%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.26%)</title><rect x="20.0521%" y="901" width="0.2604%" height="15" fill="rgb(229,81,49)" fg:x="77" fg:w="1"/><text x="20.3021%" y="911.50"></text></g><g><title>polygon_io_crypto_playground`dotenv::from_filename (1 samples, 0.26%)</title><rect x="20.3125%" y="917" width="0.2604%" height="15" fill="rgb(236,28,36)" fg:x="78" fg:w="1"/><text x="20.5625%" y="927.50"></text></g><g><title>polygon_io_crypto_playground`dotenv::find::Finder::find (1 samples, 0.26%)</title><rect x="20.3125%" y="901" width="0.2604%" height="15" fill="rgb(249,185,26)" fg:x="78" fg:w="1"/><text x="20.5625%" y="911.50"></text></g><g><title>polygon_io_crypto_playground`std::fs::OpenOptions::_open (1 samples, 0.26%)</title><rect x="20.3125%" y="885" width="0.2604%" height="15" fill="rgb(249,174,33)" fg:x="78" fg:w="1"/><text x="20.5625%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`std::sys::unix::fs::File::open_c (1 samples, 0.26%)</title><rect x="20.3125%" y="869" width="0.2604%" height="15" fill="rgb(233,201,37)" fg:x="78" fg:w="1"/><text x="20.5625%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.26%)</title><rect x="20.3125%" y="853" width="0.2604%" height="15" fill="rgb(221,78,26)" fg:x="78" fg:w="1"/><text x="20.5625%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.26%)</title><rect x="20.8333%" y="901" width="0.2604%" height="15" fill="rgb(250,127,30)" fg:x="80" fg:w="1"/><text x="21.0833%" y="911.50"></text></g><g><title>polygon_io_crypto_playground`polygonio_rs::crypto_data::Crypto::get_candles_for_trading_day (4 samples, 1.04%)</title><rect x="20.5729%" y="917" width="1.0417%" height="15" fill="rgb(230,49,44)" fg:x="79" fg:w="4"/><text x="20.8229%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.52%)</title><rect x="21.0938%" y="901" width="0.5208%" height="15" fill="rgb(229,67,23)" fg:x="81" fg:w="2"/><text x="21.3438%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.26%)</title><rect x="23.6979%" y="821" width="0.2604%" height="15" fill="rgb(249,83,47)" fg:x="91" fg:w="1"/><text x="23.9479%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.78%)</title><rect x="23.9583%" y="821" width="0.7812%" height="15" fill="rgb(215,43,3)" fg:x="92" fg:w="3"/><text x="24.2083%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.78%)</title><rect x="23.9583%" y="805" width="0.7812%" height="15" fill="rgb(238,154,13)" fg:x="92" fg:w="3"/><text x="24.2083%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.78%)</title><rect x="23.9583%" y="789" width="0.7812%" height="15" fill="rgb(219,56,2)" fg:x="92" fg:w="3"/><text x="24.2083%" y="799.50"></text></g><g><title>polygon_io_crypto_playground`alloc::raw_vec::finish_grow (3 samples, 0.78%)</title><rect x="23.9583%" y="773" width="0.7812%" height="15" fill="rgb(233,0,4)" fg:x="92" fg:w="3"/><text x="24.2083%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.78%)</title><rect x="23.9583%" y="757" width="0.7812%" height="15" fill="rgb(235,30,7)" fg:x="92" fg:w="3"/><text x="24.2083%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.78%)</title><rect x="23.9583%" y="741" width="0.7812%" height="15" fill="rgb(250,79,13)" fg:x="92" fg:w="3"/><text x="24.2083%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.78%)</title><rect x="23.9583%" y="725" width="0.7812%" height="15" fill="rgb(211,146,34)" fg:x="92" fg:w="3"/><text x="24.2083%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.26%)</title><rect x="24.4792%" y="709" width="0.2604%" height="15" fill="rgb(228,22,38)" fg:x="94" fg:w="1"/><text x="24.7292%" y="719.50"></text></g><g><title>polygon_io_crypto_playground`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.78%)</title><rect x="24.7396%" y="821" width="0.7812%" height="15" fill="rgb(235,168,5)" fg:x="95" fg:w="3"/><text x="24.9896%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`serde_json::de::Deserializer&lt;R&gt;::parse_integer (3 samples, 0.78%)</title><rect x="24.7396%" y="805" width="0.7812%" height="15" fill="rgb(221,155,16)" fg:x="95" fg:w="3"/><text x="24.9896%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`&lt;polygonio_rs::crypto_data::_::&lt;impl serde::de::Deserialize for polygonio_rs::crypto_data::Trade&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.26%)</title><rect x="25.5208%" y="821" width="0.2604%" height="15" fill="rgb(215,215,53)" fg:x="98" fg:w="1"/><text x="25.7708%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (6 samples, 1.56%)</title><rect x="25.7813%" y="821" width="1.5625%" height="15" fill="rgb(223,4,10)" fg:x="99" fg:w="6"/><text x="26.0313%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`core::ops::function::FnOnce::call_once (2 samples, 0.52%)</title><rect x="26.8229%" y="805" width="0.5208%" height="15" fill="rgb(234,103,6)" fg:x="103" fg:w="2"/><text x="27.0729%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`core::str::converts::from_utf8 (2 samples, 0.52%)</title><rect x="26.8229%" y="789" width="0.5208%" height="15" fill="rgb(227,97,0)" fg:x="103" fg:w="2"/><text x="27.0729%" y="799.50"></text></g><g><title>polygon_io_crypto_playground`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.26%)</title><rect x="27.3438%" y="805" width="0.2604%" height="15" fill="rgb(234,150,53)" fg:x="105" fg:w="1"/><text x="27.5938%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`serde_json::de::Deserializer&lt;R&gt;::parse_decimal (1 samples, 0.26%)</title><rect x="27.3438%" y="789" width="0.2604%" height="15" fill="rgb(228,201,54)" fg:x="105" fg:w="1"/><text x="27.5938%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.52%)</title><rect x="28.1250%" y="773" width="0.5208%" height="15" fill="rgb(222,22,37)" fg:x="108" fg:w="2"/><text x="28.3750%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.52%)</title><rect x="28.6458%" y="773" width="0.5208%" height="15" fill="rgb(237,53,32)" fg:x="110" fg:w="2"/><text x="28.8958%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`&lt;rust_decimal::decimal::Decimal as core::str::traits::FromStr&gt;::from_str (1 samples, 0.26%)</title><rect x="29.1667%" y="773" width="0.2604%" height="15" fill="rgb(233,25,53)" fg:x="112" fg:w="1"/><text x="29.4167%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`rust_decimal::str::handle_digit_64 (1 samples, 0.26%)</title><rect x="29.1667%" y="757" width="0.2604%" height="15" fill="rgb(210,40,34)" fg:x="112" fg:w="1"/><text x="29.4167%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::Formatter::new (1 samples, 0.26%)</title><rect x="29.4271%" y="773" width="0.2604%" height="15" fill="rgb(241,220,44)" fg:x="113" fg:w="1"/><text x="29.6771%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.52%)</title><rect x="30.2083%" y="757" width="0.5208%" height="15" fill="rgb(235,28,35)" fg:x="116" fg:w="2"/><text x="30.4583%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.78%)</title><rect x="30.9896%" y="693" width="0.7812%" height="15" fill="rgb(210,56,17)" fg:x="119" fg:w="3"/><text x="31.2396%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.52%)</title><rect x="31.2500%" y="677" width="0.5208%" height="15" fill="rgb(224,130,29)" fg:x="120" fg:w="2"/><text x="31.5000%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.52%)</title><rect x="31.2500%" y="661" width="0.5208%" height="15" fill="rgb(235,212,8)" fg:x="120" fg:w="2"/><text x="31.5000%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.26%)</title><rect x="31.5104%" y="645" width="0.2604%" height="15" fill="rgb(223,33,50)" fg:x="121" fg:w="1"/><text x="31.7604%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.26%)</title><rect x="31.7708%" y="693" width="0.2604%" height="15" fill="rgb(219,149,13)" fg:x="122" fg:w="1"/><text x="32.0208%" y="703.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::Formatter::write_formatted_parts (6 samples, 1.56%)</title><rect x="30.7292%" y="757" width="1.5625%" height="15" fill="rgb(250,156,29)" fg:x="118" fg:w="6"/><text x="30.9792%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 1.56%)</title><rect x="30.7292%" y="741" width="1.5625%" height="15" fill="rgb(216,193,19)" fg:x="118" fg:w="6"/><text x="30.9792%" y="751.50"></text></g><g><title>polygon_io_crypto_playground`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 1.30%)</title><rect x="30.9896%" y="725" width="1.3021%" height="15" fill="rgb(216,135,14)" fg:x="119" fg:w="5"/><text x="31.2396%" y="735.50"></text></g><g><title>polygon_io_crypto_playground`alloc::raw_vec::finish_grow (5 samples, 1.30%)</title><rect x="30.9896%" y="709" width="1.3021%" height="15" fill="rgb(241,47,5)" fg:x="119" fg:w="5"/><text x="31.2396%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.26%)</title><rect x="32.0312%" y="693" width="0.2604%" height="15" fill="rgb(233,42,35)" fg:x="123" fg:w="1"/><text x="32.2812%" y="703.50"></text></g><g><title>polygon_io_crypto_playground`rust_decimal::serde::_&lt;impl serde::de::Deserialize for rust_decimal::decimal::Decimal&gt;::deserialize (25 samples, 6.51%)</title><rect x="27.3438%" y="821" width="6.5104%" height="15" fill="rgb(231,13,6)" fg:x="105" fg:w="25"/><text x="27.5938%" y="831.50">polygon_i..</text></g><g><title>polygon_io_crypto_playground`serde_json::de::ParserNumber::visit (24 samples, 6.25%)</title><rect x="27.6042%" y="805" width="6.2500%" height="15" fill="rgb(207,181,40)" fg:x="106" fg:w="24"/><text x="27.8542%" y="815.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`&lt;rust_decimal::serde::DecimalVisitor as serde::de::Visitor&gt;::visit_f64 (24 samples, 6.25%)</title><rect x="27.6042%" y="789" width="6.2500%" height="15" fill="rgb(254,173,49)" fg:x="106" fg:w="24"/><text x="27.8542%" y="799.50">polygon_..</text></g><g><title>polygon_io_crypto_playground`core::fmt::float::float_to_decimal_common_shortest (16 samples, 4.17%)</title><rect x="29.6875%" y="773" width="4.1667%" height="15" fill="rgb(221,1,38)" fg:x="114" fg:w="16"/><text x="29.9375%" y="783.50">polyg..</text></g><g><title>polygon_io_crypto_playground`core::num::flt2dec::strategy::grisu::format_shortest_opt (6 samples, 1.56%)</title><rect x="32.2917%" y="757" width="1.5625%" height="15" fill="rgb(206,124,46)" fg:x="124" fg:w="6"/><text x="32.5417%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.26%)</title><rect x="33.8542%" y="821" width="0.2604%" height="15" fill="rgb(249,21,11)" fg:x="130" fg:w="1"/><text x="34.1042%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.26%)</title><rect x="33.8542%" y="805" width="0.2604%" height="15" fill="rgb(222,201,40)" fg:x="130" fg:w="1"/><text x="34.1042%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.26%)</title><rect x="33.8542%" y="789" width="0.2604%" height="15" fill="rgb(235,61,29)" fg:x="130" fg:w="1"/><text x="34.1042%" y="799.50"></text></g><g><title>polygon_io_crypto_playground`core::ops::function::FnOnce::call_once (1 samples, 0.26%)</title><rect x="33.8542%" y="773" width="0.2604%" height="15" fill="rgb(219,207,3)" fg:x="130" fg:w="1"/><text x="34.1042%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`core::str::converts::from_utf8 (1 samples, 0.26%)</title><rect x="33.8542%" y="757" width="0.2604%" height="15" fill="rgb(222,56,46)" fg:x="130" fg:w="1"/><text x="34.1042%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (46 samples, 11.98%)</title><rect x="22.3958%" y="837" width="11.9792%" height="15" fill="rgb(239,76,54)" fg:x="86" fg:w="46"/><text x="22.6458%" y="847.50">polygon_io_crypto_..</text></g><g><title>polygon_io_crypto_playground`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.26%)</title><rect x="34.1146%" y="821" width="0.2604%" height="15" fill="rgb(231,124,27)" fg:x="131" fg:w="1"/><text x="34.3646%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`serde_json::de::from_slice (50 samples, 13.02%)</title><rect x="21.6146%" y="917" width="13.0208%" height="15" fill="rgb(249,195,6)" fg:x="83" fg:w="50"/><text x="21.8646%" y="927.50">polygon_io_crypto_pl..</text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (50 samples, 13.02%)</title><rect x="21.6146%" y="901" width="13.0208%" height="15" fill="rgb(237,174,47)" fg:x="83" fg:w="50"/><text x="21.8646%" y="911.50">polygon_io_crypto_pl..</text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (50 samples, 13.02%)</title><rect x="21.6146%" y="885" width="13.0208%" height="15" fill="rgb(206,201,31)" fg:x="83" fg:w="50"/><text x="21.8646%" y="895.50">polygon_io_crypto_pl..</text></g><g><title>polygon_io_crypto_playground`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (50 samples, 13.02%)</title><rect x="21.6146%" y="869" width="13.0208%" height="15" fill="rgb(231,57,52)" fg:x="83" fg:w="50"/><text x="21.8646%" y="879.50">polygon_io_crypto_pl..</text></g><g><title>polygon_io_crypto_playground`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (48 samples, 12.50%)</title><rect x="22.1354%" y="853" width="12.5000%" height="15" fill="rgb(248,177,22)" fg:x="85" fg:w="48"/><text x="22.3854%" y="863.50">polygon_io_crypto_p..</text></g><g><title>polygon_io_crypto_playground`&lt;polygonio_rs::crypto_data::_::&lt;impl serde::de::Deserialize for polygonio_rs::crypto_data::Trade&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.26%)</title><rect x="34.3750%" y="837" width="0.2604%" height="15" fill="rgb(215,211,37)" fg:x="132" fg:w="1"/><text x="34.6250%" y="847.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.26%)</title><rect x="34.6354%" y="837" width="0.2604%" height="15" fill="rgb(241,128,51)" fg:x="133" fg:w="1"/><text x="34.8854%" y="847.50"></text></g><g><title>dyld`start (135 samples, 35.16%)</title><rect x="0.0000%" y="1093" width="35.1562%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="135"/><text x="0.2500%" y="1103.50">dyld`start</text></g><g><title>polygon_io_crypto_playground`main (134 samples, 34.90%)</title><rect x="0.2604%" y="1077" width="34.8958%" height="15" fill="rgb(228,167,24)" fg:x="1" fg:w="134"/><text x="0.5104%" y="1087.50">polygon_io_crypto_playground`main</text></g><g><title>polygon_io_crypto_playground`std::rt::lang_start_internal (134 samples, 34.90%)</title><rect x="0.2604%" y="1061" width="34.8958%" height="15" fill="rgb(228,143,12)" fg:x="1" fg:w="134"/><text x="0.5104%" y="1071.50">polygon_io_crypto_playground`std::rt::lang_start_internal</text></g><g><title>polygon_io_crypto_playground`std::rt::lang_start::_{{closure}} (133 samples, 34.64%)</title><rect x="0.5208%" y="1045" width="34.6354%" height="15" fill="rgb(249,149,8)" fg:x="2" fg:w="133"/><text x="0.7708%" y="1055.50">polygon_io_crypto_playground`std::rt::lang_start::_{{clo..</text></g><g><title>polygon_io_crypto_playground`std::sys_common::backtrace::__rust_begin_short_backtrace (133 samples, 34.64%)</title><rect x="0.5208%" y="1029" width="34.6354%" height="15" fill="rgb(243,35,44)" fg:x="2" fg:w="133"/><text x="0.7708%" y="1039.50">polygon_io_crypto_playground`std::sys_common::backtrace:..</text></g><g><title>polygon_io_crypto_playground`polygon_io_crypto_playground::main (133 samples, 34.64%)</title><rect x="0.5208%" y="1013" width="34.6354%" height="15" fill="rgb(246,89,9)" fg:x="2" fg:w="133"/><text x="0.7708%" y="1023.50">polygon_io_crypto_playground`polygon_io_crypto_playgroun..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::Runtime::block_on (133 samples, 34.64%)</title><rect x="0.5208%" y="997" width="34.6354%" height="15" fill="rgb(233,213,13)" fg:x="2" fg:w="133"/><text x="0.7708%" y="1007.50">polygon_io_crypto_playground`tokio::runtime::Runtime::bl..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (133 samples, 34.64%)</title><rect x="0.5208%" y="981" width="34.6354%" height="15" fill="rgb(233,141,41)" fg:x="2" fg:w="133"/><text x="0.7708%" y="991.50">polygon_io_crypto_playground`tokio::runtime::scheduler::..</text></g><g><title>polygon_io_crypto_playground`tokio::park::thread::CachedParkThread::block_on (133 samples, 34.64%)</title><rect x="0.5208%" y="965" width="34.6354%" height="15" fill="rgb(239,167,4)" fg:x="2" fg:w="133"/><text x="0.7708%" y="975.50">polygon_io_crypto_playground`tokio::park::thread::Cached..</text></g><g><title>polygon_io_crypto_playground`std::thread::local::LocalKey&lt;T&gt;::with (107 samples, 27.86%)</title><rect x="7.2917%" y="949" width="27.8646%" height="15" fill="rgb(209,217,16)" fg:x="28" fg:w="107"/><text x="7.5417%" y="959.50">polygon_io_crypto_playground`std::thread::loc..</text></g><g><title>polygon_io_crypto_playground`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 27.86%)</title><rect x="7.2917%" y="933" width="27.8646%" height="15" fill="rgb(219,88,35)" fg:x="28" fg:w="107"/><text x="7.5417%" y="943.50">polygon_io_crypto_playground`&lt;core::future::f..</text></g><g><title>polygon_io_crypto_playground`std::io::stdio::_print (2 samples, 0.52%)</title><rect x="34.6354%" y="917" width="0.5208%" height="15" fill="rgb(220,193,23)" fg:x="133" fg:w="2"/><text x="34.8854%" y="927.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.52%)</title><rect x="34.6354%" y="901" width="0.5208%" height="15" fill="rgb(230,90,52)" fg:x="133" fg:w="2"/><text x="34.8854%" y="911.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::write (2 samples, 0.52%)</title><rect x="34.6354%" y="885" width="0.5208%" height="15" fill="rgb(252,106,19)" fg:x="133" fg:w="2"/><text x="34.8854%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.52%)</title><rect x="34.6354%" y="869" width="0.5208%" height="15" fill="rgb(206,74,20)" fg:x="133" fg:w="2"/><text x="34.8854%" y="879.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::builders::DebugSet::entry (2 samples, 0.52%)</title><rect x="34.6354%" y="853" width="0.5208%" height="15" fill="rgb(230,138,44)" fg:x="133" fg:w="2"/><text x="34.8854%" y="863.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::builders::DebugInner::entry (1 samples, 0.26%)</title><rect x="34.8958%" y="837" width="0.2604%" height="15" fill="rgb(235,182,43)" fg:x="134" fg:w="1"/><text x="35.1458%" y="847.50"></text></g><g><title>polygon_io_crypto_playground`&lt;polygonio_rs::crypto_data::Candle as core::fmt::Debug&gt;::fmt (1 samples, 0.26%)</title><rect x="34.8958%" y="821" width="0.2604%" height="15" fill="rgb(242,16,51)" fg:x="134" fg:w="1"/><text x="35.1458%" y="831.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::Formatter::debug_struct_field4_finish (1 samples, 0.26%)</title><rect x="34.8958%" y="805" width="0.2604%" height="15" fill="rgb(248,9,4)" fg:x="134" fg:w="1"/><text x="35.1458%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`core::fmt::builders::DebugStruct::field (1 samples, 0.26%)</title><rect x="34.8958%" y="789" width="0.2604%" height="15" fill="rgb(210,31,22)" fg:x="134" fg:w="1"/><text x="35.1458%" y="799.50"></text></g><g><title>polygon_io_crypto_playground`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.26%)</title><rect x="34.8958%" y="773" width="0.2604%" height="15" fill="rgb(239,54,39)" fg:x="134" fg:w="1"/><text x="35.1458%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (1 samples, 0.26%)</title><rect x="35.1562%" y="1061" width="0.2604%" height="15" fill="rgb(230,99,41)" fg:x="135" fg:w="1"/><text x="35.4062%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (1 samples, 0.26%)</title><rect x="35.1562%" y="1045" width="0.2604%" height="15" fill="rgb(253,106,12)" fg:x="135" fg:w="1"/><text x="35.4062%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notification_merge_msg (1 samples, 0.26%)</title><rect x="35.1562%" y="1029" width="0.2604%" height="15" fill="rgb(213,46,41)" fg:x="135" fg:w="1"/><text x="35.4062%" y="1039.50"></text></g><g><title>libdispatch.dylib`libdispatch_internal_protocol_server (1 samples, 0.26%)</title><rect x="35.1562%" y="1013" width="0.2604%" height="15" fill="rgb(215,133,35)" fg:x="135" fg:w="1"/><text x="35.4062%" y="1023.50"></text></g><g><title>libdispatch.dylib`_Xmach_notify_send_possible (1 samples, 0.26%)</title><rect x="35.1562%" y="997" width="0.2604%" height="15" fill="rgb(213,28,5)" fg:x="135" fg:w="1"/><text x="35.4062%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notify_send_possible (1 samples, 0.26%)</title><rect x="35.1562%" y="981" width="0.2604%" height="15" fill="rgb(215,77,49)" fg:x="135" fg:w="1"/><text x="35.4062%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notify_merge (1 samples, 0.26%)</title><rect x="35.1562%" y="965" width="0.2604%" height="15" fill="rgb(248,100,22)" fg:x="135" fg:w="1"/><text x="35.4062%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_notification_merge_evt (1 samples, 0.26%)</title><rect x="35.1562%" y="949" width="0.2604%" height="15" fill="rgb(208,67,9)" fg:x="135" fg:w="1"/><text x="35.4062%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.26%)</title><rect x="35.1562%" y="933" width="0.2604%" height="15" fill="rgb(219,133,21)" fg:x="135" fg:w="1"/><text x="35.4062%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.26%)</title><rect x="35.1562%" y="917" width="0.2604%" height="15" fill="rgb(246,46,29)" fg:x="135" fg:w="1"/><text x="35.4062%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.26%)</title><rect x="35.1562%" y="901" width="0.2604%" height="15" fill="rgb(246,185,52)" fg:x="135" fg:w="1"/><text x="35.4062%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.26%)</title><rect x="35.6771%" y="1013" width="0.2604%" height="15" fill="rgb(252,136,11)" fg:x="137" fg:w="1"/><text x="35.9271%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_block_async_invoke2 (1 samples, 0.26%)</title><rect x="35.6771%" y="997" width="0.2604%" height="15" fill="rgb(219,138,53)" fg:x="137" fg:w="1"/><text x="35.9271%" y="1007.50"></text></g><g><title>CoreAnalytics`invocation function for block in CoreAnalytics::Client::sendXpcMessage_sync (1 samples, 0.26%)</title><rect x="35.6771%" y="981" width="0.2604%" height="15" fill="rgb(211,51,23)" fg:x="137" fg:w="1"/><text x="35.9271%" y="991.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessage_sync (1 samples, 0.26%)</title><rect x="35.6771%" y="965" width="0.2604%" height="15" fill="rgb(247,221,28)" fg:x="137" fg:w="1"/><text x="35.9271%" y="975.50"></text></g><g><title>CoreAnalytics`CoreAnalytics::Client::retryXpcMessageHelper_sync (1 samples, 0.26%)</title><rect x="35.6771%" y="949" width="0.2604%" height="15" fill="rgb(251,222,45)" fg:x="137" fg:w="1"/><text x="35.9271%" y="959.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply (1 samples, 0.26%)</title><rect x="35.6771%" y="933" width="0.2604%" height="15" fill="rgb(217,162,53)" fg:x="137" fg:w="1"/><text x="35.9271%" y="943.50"></text></g><g><title>libxpc.dylib`_xpc_connection_pack_message (1 samples, 0.26%)</title><rect x="35.6771%" y="917" width="0.2604%" height="15" fill="rgb(229,93,14)" fg:x="137" fg:w="1"/><text x="35.9271%" y="927.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.26%)</title><rect x="35.6771%" y="901" width="0.2604%" height="15" fill="rgb(209,67,49)" fg:x="137" fg:w="1"/><text x="35.9271%" y="911.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (1 samples, 0.26%)</title><rect x="35.6771%" y="885" width="0.2604%" height="15" fill="rgb(213,87,29)" fg:x="137" fg:w="1"/><text x="35.9271%" y="895.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.26%)</title><rect x="35.6771%" y="869" width="0.2604%" height="15" fill="rgb(205,151,52)" fg:x="137" fg:w="1"/><text x="35.9271%" y="879.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.26%)</title><rect x="35.6771%" y="853" width="0.2604%" height="15" fill="rgb(253,215,39)" fg:x="137" fg:w="1"/><text x="35.9271%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.26%)</title><rect x="35.6771%" y="837" width="0.2604%" height="15" fill="rgb(221,220,41)" fg:x="137" fg:w="1"/><text x="35.9271%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.26%)</title><rect x="35.6771%" y="821" width="0.2604%" height="15" fill="rgb(218,133,21)" fg:x="137" fg:w="1"/><text x="35.9271%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.26%)</title><rect x="35.6771%" y="805" width="0.2604%" height="15" fill="rgb(221,193,43)" fg:x="137" fg:w="1"/><text x="35.9271%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.26%)</title><rect x="35.6771%" y="789" width="0.2604%" height="15" fill="rgb(240,128,52)" fg:x="137" fg:w="1"/><text x="35.9271%" y="799.50"></text></g><g><title>libxpc.dylib`_xpc_connection_call_reply_async (1 samples, 0.26%)</title><rect x="35.9375%" y="981" width="0.2604%" height="15" fill="rgb(253,114,12)" fg:x="138" fg:w="1"/><text x="36.1875%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.26%)</title><rect x="35.9375%" y="965" width="0.2604%" height="15" fill="rgb(215,223,47)" fg:x="138" fg:w="1"/><text x="36.1875%" y="975.50"></text></g><g><title>libdispatch.dylib`_os_object_release_without_xref_dispose (1 samples, 0.26%)</title><rect x="35.9375%" y="949" width="0.2604%" height="15" fill="rgb(248,225,23)" fg:x="138" fg:w="1"/><text x="36.1875%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (5 samples, 1.30%)</title><rect x="35.1562%" y="1093" width="1.3021%" height="15" fill="rgb(250,108,0)" fg:x="135" fg:w="5"/><text x="35.4062%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (5 samples, 1.30%)</title><rect x="35.1562%" y="1077" width="1.3021%" height="15" fill="rgb(228,208,7)" fg:x="135" fg:w="5"/><text x="35.4062%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (4 samples, 1.04%)</title><rect x="35.4167%" y="1061" width="1.0417%" height="15" fill="rgb(244,45,10)" fg:x="136" fg:w="4"/><text x="35.6667%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (4 samples, 1.04%)</title><rect x="35.4167%" y="1045" width="1.0417%" height="15" fill="rgb(207,125,25)" fg:x="136" fg:w="4"/><text x="35.6667%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (4 samples, 1.04%)</title><rect x="35.4167%" y="1029" width="1.0417%" height="15" fill="rgb(210,195,18)" fg:x="136" fg:w="4"/><text x="35.6667%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_async_reply_invoke (2 samples, 0.52%)</title><rect x="35.9375%" y="1013" width="0.5208%" height="15" fill="rgb(249,80,12)" fg:x="138" fg:w="2"/><text x="36.1875%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout3 (2 samples, 0.52%)</title><rect x="35.9375%" y="997" width="0.5208%" height="15" fill="rgb(221,65,9)" fg:x="138" fg:w="2"/><text x="36.1875%" y="1007.50"></text></g><g><title>libxpc.dylib`_xpc_connection_handle_async_reply (1 samples, 0.26%)</title><rect x="36.1979%" y="981" width="0.2604%" height="15" fill="rgb(235,49,36)" fg:x="139" fg:w="1"/><text x="36.4479%" y="991.50"></text></g><g><title>libxpc.dylib`_xpc_connection_unpack_message (1 samples, 0.26%)</title><rect x="36.1979%" y="965" width="0.2604%" height="15" fill="rgb(225,32,20)" fg:x="139" fg:w="1"/><text x="36.4479%" y="975.50"></text></g><g><title>libxpc.dylib`xpc_receive_mach_msg (1 samples, 0.26%)</title><rect x="36.1979%" y="949" width="0.2604%" height="15" fill="rgb(215,141,46)" fg:x="139" fg:w="1"/><text x="36.4479%" y="959.50"></text></g><g><title>libxpc.dylib`_xpc_graph_unpack_impl (1 samples, 0.26%)</title><rect x="36.1979%" y="933" width="0.2604%" height="15" fill="rgb(250,160,47)" fg:x="139" fg:w="1"/><text x="36.4479%" y="943.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_create_from_received_message (1 samples, 0.26%)</title><rect x="36.1979%" y="917" width="0.2604%" height="15" fill="rgb(216,222,40)" fg:x="139" fg:w="1"/><text x="36.4479%" y="927.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.26%)</title><rect x="36.1979%" y="901" width="0.2604%" height="15" fill="rgb(234,217,39)" fg:x="139" fg:w="1"/><text x="36.4479%" y="911.50"></text></g><g><title>libnetwork.dylib`nw_endpoint_create_address (1 samples, 0.26%)</title><rect x="36.4583%" y="869" width="0.2604%" height="15" fill="rgb(207,178,40)" fg:x="140" fg:w="1"/><text x="36.7083%" y="879.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.26%)</title><rect x="36.4583%" y="853" width="0.2604%" height="15" fill="rgb(221,136,13)" fg:x="140" fg:w="1"/><text x="36.7083%" y="863.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.26%)</title><rect x="36.4583%" y="837" width="0.2604%" height="15" fill="rgb(249,199,10)" fg:x="140" fg:w="1"/><text x="36.7083%" y="847.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.26%)</title><rect x="36.4583%" y="821" width="0.2604%" height="15" fill="rgb(249,222,13)" fg:x="140" fg:w="1"/><text x="36.7083%" y="831.50"></text></g><g><title>libnetwork.dylib`nw_nat64_v4_address_requires_synthesis (2 samples, 0.52%)</title><rect x="36.4583%" y="885" width="0.5208%" height="15" fill="rgb(244,185,38)" fg:x="140" fg:w="2"/><text x="36.7083%" y="895.50"></text></g><g><title>libnetwork.dylib`nw_path_create_evaluator_for_endpoint (1 samples, 0.26%)</title><rect x="36.7188%" y="869" width="0.2604%" height="15" fill="rgb(236,202,9)" fg:x="141" fg:w="1"/><text x="36.9688%" y="879.50"></text></g><g><title>libnetwork.dylib`nw_path_evaluator_evaluate (1 samples, 0.26%)</title><rect x="36.7188%" y="853" width="0.2604%" height="15" fill="rgb(250,229,37)" fg:x="141" fg:w="1"/><text x="36.9688%" y="863.50"></text></g><g><title>libnetwork.dylib`nw_path_snapshot_path (1 samples, 0.26%)</title><rect x="36.7188%" y="837" width="0.2604%" height="15" fill="rgb(206,174,23)" fg:x="141" fg:w="1"/><text x="36.9688%" y="847.50"></text></g><g><title>libnetwork.dylib`nw_path_snapshot_fallback (1 samples, 0.26%)</title><rect x="36.7188%" y="821" width="0.2604%" height="15" fill="rgb(211,33,43)" fg:x="141" fg:w="1"/><text x="36.9688%" y="831.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.26%)</title><rect x="36.7188%" y="805" width="0.2604%" height="15" fill="rgb(245,58,50)" fg:x="141" fg:w="1"/><text x="36.9688%" y="815.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.26%)</title><rect x="36.7188%" y="789" width="0.2604%" height="15" fill="rgb(244,68,36)" fg:x="141" fg:w="1"/><text x="36.9688%" y="799.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (1 samples, 0.26%)</title><rect x="36.7188%" y="773" width="0.2604%" height="15" fill="rgb(232,229,15)" fg:x="141" fg:w="1"/><text x="36.9688%" y="783.50"></text></g><g><title>libnetwork.dylib`__nw_path_snapshot_fallback_block_invoke (1 samples, 0.26%)</title><rect x="36.7188%" y="757" width="0.2604%" height="15" fill="rgb(254,30,23)" fg:x="141" fg:w="1"/><text x="36.9688%" y="767.50"></text></g><g><title>libnetwork.dylib`nw_path_get_interface_index (1 samples, 0.26%)</title><rect x="36.7188%" y="741" width="0.2604%" height="15" fill="rgb(235,160,14)" fg:x="141" fg:w="1"/><text x="36.9688%" y="751.50"></text></g><g><title>libnetwork.dylib`nw_path_network_is_satisfied_update_reason (1 samples, 0.26%)</title><rect x="36.7188%" y="725" width="0.2604%" height="15" fill="rgb(212,155,44)" fg:x="141" fg:w="1"/><text x="36.9688%" y="735.50"></text></g><g><title>libnetwork.dylib`nw_path_uses_nexus_internal (1 samples, 0.26%)</title><rect x="36.7188%" y="709" width="0.2604%" height="15" fill="rgb(226,2,50)" fg:x="141" fg:w="1"/><text x="36.9688%" y="719.50"></text></g><g><title>libnetwork.dylib`nw_path_get_nexus_agent (1 samples, 0.26%)</title><rect x="36.7188%" y="693" width="0.2604%" height="15" fill="rgb(234,177,6)" fg:x="141" fg:w="1"/><text x="36.9688%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.26%)</title><rect x="36.7188%" y="677" width="0.2604%" height="15" fill="rgb(217,24,9)" fg:x="141" fg:w="1"/><text x="36.9688%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.26%)</title><rect x="36.7188%" y="661" width="0.2604%" height="15" fill="rgb(220,13,46)" fg:x="141" fg:w="1"/><text x="36.9688%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (1 samples, 0.26%)</title><rect x="36.7188%" y="645" width="0.2604%" height="15" fill="rgb(239,221,27)" fg:x="141" fg:w="1"/><text x="36.9688%" y="655.50"></text></g><g><title>libnetwork.dylib`__nw_path_get_nexus_agent_block_invoke (1 samples, 0.26%)</title><rect x="36.7188%" y="629" width="0.2604%" height="15" fill="rgb(222,198,25)" fg:x="141" fg:w="1"/><text x="36.9688%" y="639.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_data (1 samples, 0.26%)</title><rect x="36.7188%" y="613" width="0.2604%" height="15" fill="rgb(211,99,13)" fg:x="141" fg:w="1"/><text x="36.9688%" y="623.50"></text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 0.26%)</title><rect x="36.7188%" y="597" width="0.2604%" height="15" fill="rgb(232,111,31)" fg:x="141" fg:w="1"/><text x="36.9688%" y="607.50"></text></g><g><title>polygon_io_crypto_playground`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.78%)</title><rect x="36.4583%" y="981" width="0.7812%" height="15" fill="rgb(245,82,37)" fg:x="140" fg:w="3"/><text x="36.7083%" y="991.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.78%)</title><rect x="36.4583%" y="965" width="0.7812%" height="15" fill="rgb(227,149,46)" fg:x="140" fg:w="3"/><text x="36.7083%" y="975.50"></text></g><g><title>polygon_io_crypto_playground`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (3 samples, 0.78%)</title><rect x="36.4583%" y="949" width="0.7812%" height="15" fill="rgb(218,36,50)" fg:x="140" fg:w="3"/><text x="36.7083%" y="959.50"></text></g><g><title>polygon_io_crypto_playground`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (3 samples, 0.78%)</title><rect x="36.4583%" y="933" width="0.7812%" height="15" fill="rgb(226,80,48)" fg:x="140" fg:w="3"/><text x="36.7083%" y="943.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (3 samples, 0.78%)</title><rect x="36.4583%" y="917" width="0.7812%" height="15" fill="rgb(238,224,15)" fg:x="140" fg:w="3"/><text x="36.7083%" y="927.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (3 samples, 0.78%)</title><rect x="36.4583%" y="901" width="0.7812%" height="15" fill="rgb(241,136,10)" fg:x="140" fg:w="3"/><text x="36.7083%" y="911.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (1 samples, 0.26%)</title><rect x="36.9792%" y="885" width="0.2604%" height="15" fill="rgb(208,32,45)" fg:x="142" fg:w="1"/><text x="37.2292%" y="895.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (1 samples, 0.26%)</title><rect x="36.9792%" y="869" width="0.2604%" height="15" fill="rgb(207,135,9)" fg:x="142" fg:w="1"/><text x="37.2292%" y="879.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (1 samples, 0.26%)</title><rect x="36.9792%" y="853" width="0.2604%" height="15" fill="rgb(206,86,44)" fg:x="142" fg:w="1"/><text x="37.2292%" y="863.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceCreateConnection (1 samples, 0.26%)</title><rect x="36.9792%" y="837" width="0.2604%" height="15" fill="rgb(245,177,15)" fg:x="142" fg:w="1"/><text x="37.2292%" y="847.50"></text></g><g><title>libsystem_dnssd.dylib`deliver_request (1 samples, 0.26%)</title><rect x="36.9792%" y="821" width="0.2604%" height="15" fill="rgb(206,64,50)" fg:x="142" fg:w="1"/><text x="37.2292%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__sendto_nocancel (1 samples, 0.26%)</title><rect x="36.9792%" y="805" width="0.2604%" height="15" fill="rgb(234,36,40)" fg:x="142" fg:w="1"/><text x="37.2292%" y="815.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.26%)</title><rect x="38.5417%" y="917" width="0.2604%" height="15" fill="rgb(213,64,8)" fg:x="148" fg:w="1"/><text x="38.7917%" y="927.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (3 samples, 0.78%)</title><rect x="38.8021%" y="917" width="0.7812%" height="15" fill="rgb(210,75,36)" fg:x="149" fg:w="3"/><text x="39.0521%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.26%)</title><rect x="40.6250%" y="853" width="0.2604%" height="15" fill="rgb(229,88,21)" fg:x="156" fg:w="1"/><text x="40.8750%" y="863.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::Driver::turn (32 samples, 8.33%)</title><rect x="40.8854%" y="853" width="8.3333%" height="15" fill="rgb(252,204,47)" fg:x="157" fg:w="32"/><text x="41.1354%" y="863.50">polygon_io_c..</text></g><g><title>libsystem_kernel.dylib`kevent (31 samples, 8.07%)</title><rect x="41.1458%" y="837" width="8.0729%" height="15" fill="rgb(208,77,27)" fg:x="158" fg:w="31"/><text x="41.3958%" y="847.50">libsystem_k..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (34 samples, 8.85%)</title><rect x="40.6250%" y="885" width="8.8542%" height="15" fill="rgb(221,76,26)" fg:x="156" fg:w="34"/><text x="40.8750%" y="895.50">polygon_io_cr..</text></g><g><title>polygon_io_crypto_playground`tokio::time::driver::Driver&lt;P&gt;::park_internal (34 samples, 8.85%)</title><rect x="40.6250%" y="869" width="8.8542%" height="15" fill="rgb(225,139,18)" fg:x="156" fg:w="34"/><text x="40.8750%" y="879.50">polygon_io_cr..</text></g><g><title>polygon_io_crypto_playground`tokio::signal::unix::driver::Driver::process (1 samples, 0.26%)</title><rect x="49.2188%" y="853" width="0.2604%" height="15" fill="rgb(230,137,11)" fg:x="189" fg:w="1"/><text x="49.4688%" y="863.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.26%)</title><rect x="49.2188%" y="837" width="0.2604%" height="15" fill="rgb(212,28,1)" fg:x="189" fg:w="1"/><text x="49.4688%" y="847.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.26%)</title><rect x="49.2188%" y="821" width="0.2604%" height="15" fill="rgb(248,164,17)" fg:x="189" fg:w="1"/><text x="49.4688%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (29 samples, 7.55%)</title><rect x="50.5208%" y="869" width="7.5521%" height="15" fill="rgb(222,171,42)" fg:x="194" fg:w="29"/><text x="50.7708%" y="879.50">libsystem_..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio::runtime::scheduler::multi_thread::park::Parker as tokio::park::Park&gt;::park (72 samples, 18.75%)</title><rect x="39.5833%" y="901" width="18.7500%" height="15" fill="rgb(243,84,45)" fg:x="152" fg:w="72"/><text x="39.8333%" y="911.50">polygon_io_crypto_playground`..</text></g><g><title>polygon_io_crypto_playground`parking_lot::condvar::Condvar::wait_until_internal (34 samples, 8.85%)</title><rect x="49.4792%" y="885" width="8.8542%" height="15" fill="rgb(252,49,23)" fg:x="190" fg:w="34"/><text x="49.7292%" y="895.50">polygon_io_cr..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.26%)</title><rect x="58.0729%" y="869" width="0.2604%" height="15" fill="rgb(215,19,7)" fg:x="223" fg:w="1"/><text x="58.3229%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.26%)</title><rect x="58.0729%" y="853" width="0.2604%" height="15" fill="rgb(238,81,41)" fg:x="223" fg:w="1"/><text x="58.3229%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.26%)</title><rect x="58.3333%" y="837" width="0.2604%" height="15" fill="rgb(210,199,37)" fg:x="224" fg:w="1"/><text x="58.5833%" y="847.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (74 samples, 19.27%)</title><rect x="39.5833%" y="917" width="19.2708%" height="15" fill="rgb(244,192,49)" fg:x="152" fg:w="74"/><text x="39.8333%" y="927.50">polygon_io_crypto_playground`t..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio::runtime::scheduler::multi_thread::park::Parker as tokio::park::Park&gt;::park_timeout (2 samples, 0.52%)</title><rect x="58.3333%" y="901" width="0.5208%" height="15" fill="rgb(226,211,11)" fg:x="224" fg:w="2"/><text x="58.5833%" y="911.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (2 samples, 0.52%)</title><rect x="58.3333%" y="885" width="0.5208%" height="15" fill="rgb(236,162,54)" fg:x="224" fg:w="2"/><text x="58.5833%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`tokio::time::driver::Driver&lt;P&gt;::park_internal (2 samples, 0.52%)</title><rect x="58.3333%" y="869" width="0.5208%" height="15" fill="rgb(220,229,9)" fg:x="224" fg:w="2"/><text x="58.5833%" y="879.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::Driver::turn (2 samples, 0.52%)</title><rect x="58.3333%" y="853" width="0.5208%" height="15" fill="rgb(250,87,22)" fg:x="224" fg:w="2"/><text x="58.5833%" y="863.50"></text></g><g><title>polygon_io_crypto_playground`mio::poll::Poll::poll (1 samples, 0.26%)</title><rect x="58.5938%" y="837" width="0.2604%" height="15" fill="rgb(239,43,17)" fg:x="225" fg:w="1"/><text x="58.8438%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent (13 samples, 3.39%)</title><rect x="59.1146%" y="885" width="3.3854%" height="15" fill="rgb(231,177,25)" fg:x="227" fg:w="13"/><text x="59.3646%" y="895.50">lib..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (14 samples, 3.65%)</title><rect x="59.1146%" y="901" width="3.6458%" height="15" fill="rgb(219,179,1)" fg:x="227" fg:w="14"/><text x="59.3646%" y="911.50">poly..</text></g><g><title>polygon_io_crypto_playground`mio::waker::Waker::wake (1 samples, 0.26%)</title><rect x="62.5000%" y="885" width="0.2604%" height="15" fill="rgb(238,219,53)" fg:x="240" fg:w="1"/><text x="62.7500%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`parking_lot::condvar::Condvar::notify_one_slow (4 samples, 1.04%)</title><rect x="62.7604%" y="901" width="1.0417%" height="15" fill="rgb(232,167,36)" fg:x="241" fg:w="4"/><text x="63.0104%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.78%)</title><rect x="63.0208%" y="885" width="0.7812%" height="15" fill="rgb(244,19,51)" fg:x="242" fg:w="3"/><text x="63.2708%" y="895.50"></text></g><g><title>polygon_io_crypto_playground`hyper::body::body::Sender::try_send_data (1 samples, 0.26%)</title><rect x="65.1042%" y="789" width="0.2604%" height="15" fill="rgb(224,6,22)" fg:x="250" fg:w="1"/><text x="65.3542%" y="799.50"></text></g><g><title>polygon_io_crypto_playground`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (4 samples, 1.04%)</title><rect x="65.6250%" y="757" width="1.0417%" height="15" fill="rgb(224,145,5)" fg:x="252" fg:w="4"/><text x="65.8750%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 1.04%)</title><rect x="65.6250%" y="741" width="1.0417%" height="15" fill="rgb(234,130,49)" fg:x="252" fg:w="4"/><text x="65.8750%" y="751.50"></text></g><g><title>polygon_io_crypto_playground`hyper::body::body::Sender::poll_ready (5 samples, 1.30%)</title><rect x="65.6250%" y="773" width="1.3021%" height="15" fill="rgb(254,6,2)" fg:x="252" fg:w="5"/><text x="65.8750%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.26%)</title><rect x="66.6667%" y="757" width="0.2604%" height="15" fill="rgb(208,96,46)" fg:x="256" fg:w="1"/><text x="66.9167%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::waker::clone_waker (1 samples, 0.26%)</title><rect x="66.6667%" y="741" width="0.2604%" height="15" fill="rgb(239,3,39)" fg:x="256" fg:w="1"/><text x="66.9167%" y="751.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::state::State::ref_inc (1 samples, 0.26%)</title><rect x="66.6667%" y="725" width="0.2604%" height="15" fill="rgb(233,210,1)" fg:x="256" fg:w="1"/><text x="66.9167%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.78%)</title><rect x="67.4479%" y="741" width="0.7812%" height="15" fill="rgb(244,137,37)" fg:x="259" fg:w="3"/><text x="67.6979%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.52%)</title><rect x="67.7083%" y="725" width="0.5208%" height="15" fill="rgb(240,136,2)" fg:x="260" fg:w="2"/><text x="67.9583%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.52%)</title><rect x="67.7083%" y="709" width="0.5208%" height="15" fill="rgb(239,18,37)" fg:x="260" fg:w="2"/><text x="67.9583%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.26%)</title><rect x="67.9688%" y="693" width="0.2604%" height="15" fill="rgb(218,185,22)" fg:x="261" fg:w="1"/><text x="68.2188%" y="703.50"></text></g><g><title>polygon_io_crypto_playground`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.26%)</title><rect x="68.2292%" y="725" width="0.2604%" height="15" fill="rgb(225,218,4)" fg:x="262" fg:w="1"/><text x="68.4792%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (14 samples, 3.65%)</title><rect x="68.4896%" y="709" width="3.6458%" height="15" fill="rgb(230,182,32)" fg:x="263" fg:w="14"/><text x="68.7396%" y="719.50">libs..</text></g><g><title>polygon_io_crypto_playground`hyper::body::body::Sender::try_send_data (21 samples, 5.47%)</title><rect x="66.9271%" y="773" width="5.4688%" height="15" fill="rgb(242,56,43)" fg:x="257" fg:w="21"/><text x="67.1771%" y="783.50">polygon..</text></g><g><title>polygon_io_crypto_playground`futures_channel::mpsc::Sender&lt;T&gt;::try_send (21 samples, 5.47%)</title><rect x="66.9271%" y="757" width="5.4688%" height="15" fill="rgb(233,99,24)" fg:x="257" fg:w="21"/><text x="67.1771%" y="767.50">polygon..</text></g><g><title>polygon_io_crypto_playground`tokio::park::thread::wake (16 samples, 4.17%)</title><rect x="68.2292%" y="741" width="4.1667%" height="15" fill="rgb(234,209,42)" fg:x="262" fg:w="16"/><text x="68.4792%" y="751.50">polyg..</text></g><g><title>polygon_io_crypto_playground`parking_lot::condvar::Condvar::notify_one_slow (15 samples, 3.91%)</title><rect x="68.4896%" y="725" width="3.9062%" height="15" fill="rgb(227,7,12)" fg:x="263" fg:w="15"/><text x="68.7396%" y="735.50">poly..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.26%)</title><rect x="72.1354%" y="709" width="0.2604%" height="15" fill="rgb(245,203,43)" fg:x="277" fg:w="1"/><text x="72.3854%" y="719.50"></text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (1 samples, 0.26%)</title><rect x="72.3958%" y="773" width="0.2604%" height="15" fill="rgb(238,205,33)" fg:x="278" fg:w="1"/><text x="72.6458%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`tracing_core::metadata::Metadata::fields (1 samples, 0.26%)</title><rect x="72.3958%" y="757" width="0.2604%" height="15" fill="rgb(231,56,7)" fg:x="278" fg:w="1"/><text x="72.6458%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 0.26%)</title><rect x="72.6562%" y="773" width="0.2604%" height="15" fill="rgb(244,186,29)" fg:x="279" fg:w="1"/><text x="72.9062%" y="783.50"></text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1 samples, 0.26%)</title><rect x="72.6562%" y="757" width="0.2604%" height="15" fill="rgb(234,111,31)" fg:x="279" fg:w="1"/><text x="72.9062%" y="767.50"></text></g><g><title>polygon_io_crypto_playground`&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.26%)</title><rect x="73.4375%" y="725" width="0.2604%" height="15" fill="rgb(241,149,10)" fg:x="282" fg:w="1"/><text x="73.6875%" y="735.50"></text></g><g><title>polygon_io_crypto_playground`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.26%)</title><rect x="73.6979%" y="725" width="0.2604%" height="15" fill="rgb(249,206,44)" fg:x="283" fg:w="1"/><text x="73.9479%" y="735.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (1 samples, 0.26%)</title><rect x="73.9583%" y="709" width="0.2604%" height="15" fill="rgb(251,153,30)" fg:x="284" fg:w="1"/><text x="74.2083%" y="719.50"></text></g><g><title>Security`DYLD-STUB$$memcpy (1 samples, 0.26%)</title><rect x="74.2188%" y="693" width="0.2604%" height="15" fill="rgb(239,152,38)" fg:x="285" fg:w="1"/><text x="74.4688%" y="703.50"></text></g><g><title>Security`SSLGetBufferedReadSize (1 samples, 0.26%)</title><rect x="74.4792%" y="693" width="0.2604%" height="15" fill="rgb(249,139,47)" fg:x="286" fg:w="1"/><text x="74.7292%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.26%)</title><rect x="74.7396%" y="661" width="0.2604%" height="15" fill="rgb(244,64,35)" fg:x="287" fg:w="1"/><text x="74.9896%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.26%)</title><rect x="75.2604%" y="645" width="0.2604%" height="15" fill="rgb(216,46,15)" fg:x="289" fg:w="1"/><text x="75.5104%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_init (1 samples, 0.26%)</title><rect x="75.2604%" y="629" width="0.2604%" height="15" fill="rgb(250,74,19)" fg:x="289" fg:w="1"/><text x="75.5104%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_reset (1 samples, 0.26%)</title><rect x="75.2604%" y="613" width="0.2604%" height="15" fill="rgb(249,42,33)" fg:x="289" fg:w="1"/><text x="75.5104%" y="623.50"></text></g><g><title>libsystem_c.dylib`memset_s (1 samples, 0.26%)</title><rect x="75.2604%" y="597" width="0.2604%" height="15" fill="rgb(242,149,17)" fg:x="289" fg:w="1"/><text x="75.5104%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_set_iv (1 samples, 0.26%)</title><rect x="75.5208%" y="645" width="0.2604%" height="15" fill="rgb(244,29,21)" fg:x="290" fg:w="1"/><text x="75.7708%" y="655.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADSetIV (1 samples, 0.26%)</title><rect x="75.7812%" y="645" width="0.2604%" height="15" fill="rgb(220,130,37)" fg:x="291" fg:w="1"/><text x="76.0312%" y="655.50"></text></g><g><title>libcorecrypto.dylib`Main_Decrypt_Loop (2 samples, 0.52%)</title><rect x="76.5625%" y="597" width="0.5208%" height="15" fill="rgb(211,67,2)" fg:x="294" fg:w="2"/><text x="76.8125%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccaes_vng_gcm_decrypt (4 samples, 1.04%)</title><rect x="76.3021%" y="613" width="1.0417%" height="15" fill="rgb(235,68,52)" fg:x="293" fg:w="4"/><text x="76.5521%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_aad_finalize (1 samples, 0.26%)</title><rect x="77.0833%" y="597" width="0.2604%" height="15" fill="rgb(246,142,3)" fg:x="296" fg:w="1"/><text x="77.3333%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_mult_h (1 samples, 0.26%)</title><rect x="77.0833%" y="581" width="0.2604%" height="15" fill="rgb(241,25,7)" fg:x="296" fg:w="1"/><text x="77.3333%" y="591.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (6 samples, 1.56%)</title><rect x="76.0417%" y="645" width="1.5625%" height="15" fill="rgb(242,119,39)" fg:x="292" fg:w="6"/><text x="76.2917%" y="655.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (5 samples, 1.30%)</title><rect x="76.3021%" y="629" width="1.3021%" height="15" fill="rgb(241,98,45)" fg:x="293" fg:w="5"/><text x="76.5521%" y="639.50"></text></g><g><title>libcorecrypto.dylib`gcm_gmult (1 samples, 0.26%)</title><rect x="77.3438%" y="613" width="0.2604%" height="15" fill="rgb(254,28,30)" fg:x="297" fg:w="1"/><text x="77.5938%" y="623.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (11 samples, 2.86%)</title><rect x="75.0000%" y="661" width="2.8646%" height="15" fill="rgb(241,142,54)" fg:x="288" fg:w="11"/><text x="75.2500%" y="671.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.26%)</title><rect x="77.6042%" y="645" width="0.2604%" height="15" fill="rgb(222,85,15)" fg:x="298" fg:w="1"/><text x="77.8542%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.26%)</title><rect x="77.8646%" y="661" width="0.2604%" height="15" fill="rgb(210,85,47)" fg:x="299" fg:w="1"/><text x="78.1146%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.26%)</title><rect x="78.6458%" y="613" width="0.2604%" height="15" fill="rgb(224,206,25)" fg:x="302" fg:w="1"/><text x="78.8958%" y="623.50"></text></g><g><title>polygon_io_crypto_playground`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (65 samples, 16.93%)</title><rect x="78.9062%" y="613" width="16.9271%" height="15" fill="rgb(243,201,19)" fg:x="303" fg:w="65"/><text x="79.1562%" y="623.50">polygon_io_crypto_playgrou..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (65 samples, 16.93%)</title><rect x="78.9062%" y="597" width="16.9271%" height="15" fill="rgb(236,59,4)" fg:x="303" fg:w="65"/><text x="79.1562%" y="607.50">libsystem_kernel.dylib`__r..</text></g><g><title>polygon_io_crypto_playground`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.26%)</title><rect x="95.8333%" y="613" width="0.2604%" height="15" fill="rgb(254,179,45)" fg:x="368" fg:w="1"/><text x="96.0833%" y="623.50"></text></g><g><title>Security`SSLRecordReadInternal (83 samples, 21.61%)</title><rect x="74.7396%" y="677" width="21.6146%" height="15" fill="rgb(226,14,10)" fg:x="287" fg:w="83"/><text x="74.9896%" y="687.50">Security`SSLRecordReadInternal</text></g><g><title>polygon_io_crypto_playground`security_framework::secure_transport::read_func (70 samples, 18.23%)</title><rect x="78.1250%" y="661" width="18.2292%" height="15" fill="rgb(244,27,41)" fg:x="300" fg:w="70"/><text x="78.3750%" y="671.50">polygon_io_crypto_playground..</text></g><g><title>polygon_io_crypto_playground`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (70 samples, 18.23%)</title><rect x="78.1250%" y="645" width="18.2292%" height="15" fill="rgb(235,35,32)" fg:x="300" fg:w="70"/><text x="78.3750%" y="655.50">polygon_io_crypto_playground..</text></g><g><title>polygon_io_crypto_playground`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (69 samples, 17.97%)</title><rect x="78.3854%" y="629" width="17.9688%" height="15" fill="rgb(218,68,31)" fg:x="301" fg:w="69"/><text x="78.6354%" y="639.50">polygon_io_crypto_playground..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.26%)</title><rect x="96.0938%" y="613" width="0.2604%" height="15" fill="rgb(207,120,37)" fg:x="369" fg:w="1"/><text x="96.3438%" y="623.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.26%)</title><rect x="96.0938%" y="597" width="0.2604%" height="15" fill="rgb(227,98,0)" fg:x="369" fg:w="1"/><text x="96.3438%" y="607.50"></text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::state::State::ref_inc (1 samples, 0.26%)</title><rect x="96.0938%" y="581" width="0.2604%" height="15" fill="rgb(207,7,3)" fg:x="369" fg:w="1"/><text x="96.3438%" y="591.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (2 samples, 0.52%)</title><rect x="96.3542%" y="677" width="0.5208%" height="15" fill="rgb(206,98,19)" fg:x="370" fg:w="2"/><text x="96.6042%" y="687.50"></text></g><g><title>Security`SSLRead (86 samples, 22.40%)</title><rect x="74.7396%" y="693" width="22.3958%" height="15" fill="rgb(217,5,26)" fg:x="287" fg:w="86"/><text x="74.9896%" y="703.50">Security`SSLRead</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.26%)</title><rect x="96.8750%" y="677" width="0.2604%" height="15" fill="rgb(235,190,38)" fg:x="372" fg:w="1"/><text x="97.1250%" y="687.50"></text></g><g><title>polygon_io_crypto_playground`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (96 samples, 25.00%)</title><rect x="74.2188%" y="709" width="25.0000%" height="15" fill="rgb(247,86,24)" fg:x="285" fg:w="96"/><text x="74.4688%" y="719.50">polygon_io_crypto_playground`&lt;tokio_nati..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 2.08%)</title><rect x="97.1354%" y="693" width="2.0833%" height="15" fill="rgb(205,101,16)" fg:x="373" fg:w="8"/><text x="97.3854%" y="703.50">l..</text></g><g><title>polygon_io_crypto_playground`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.26%)</title><rect x="99.2188%" y="709" width="0.2604%" height="15" fill="rgb(246,168,33)" fg:x="381" fg:w="1"/><text x="99.4688%" y="719.50"></text></g><g><title>polygon_io_crypto_playground`std::panicking::try (138 samples, 35.94%)</title><rect x="63.8021%" y="869" width="35.9375%" height="15" fill="rgb(231,114,1)" fg:x="245" fg:w="138"/><text x="64.0521%" y="879.50">polygon_io_crypto_playground`std::panicking::try</text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (138 samples, 35.94%)</title><rect x="63.8021%" y="853" width="35.9375%" height="15" fill="rgb(207,184,53)" fg:x="245" fg:w="138"/><text x="64.0521%" y="863.50">polygon_io_crypto_playground`&lt;futures_util::future::future..</text></g><g><title>polygon_io_crypto_playground`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (137 samples, 35.68%)</title><rect x="64.0625%" y="837" width="35.6771%" height="15" fill="rgb(224,95,51)" fg:x="246" fg:w="137"/><text x="64.3125%" y="847.50">polygon_io_crypto_playground`&lt;futures_util::future::future..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (137 samples, 35.68%)</title><rect x="64.0625%" y="821" width="35.6771%" height="15" fill="rgb(212,188,45)" fg:x="246" fg:w="137"/><text x="64.3125%" y="831.50">polygon_io_crypto_playground`&lt;hyper::client::conn::Connect..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (137 samples, 35.68%)</title><rect x="64.0625%" y="805" width="35.6771%" height="15" fill="rgb(223,154,38)" fg:x="246" fg:w="137"/><text x="64.3125%" y="815.50">polygon_io_crypto_playground`hyper::proto::h1::dispatch::D..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (132 samples, 34.38%)</title><rect x="65.3646%" y="789" width="34.3750%" height="15" fill="rgb(251,22,52)" fg:x="251" fg:w="132"/><text x="65.6146%" y="799.50">polygon_io_crypto_playground`hyper::proto::h1::dispatch:..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (103 samples, 26.82%)</title><rect x="72.9167%" y="773" width="26.8229%" height="15" fill="rgb(229,209,22)" fg:x="280" fg:w="103"/><text x="73.1667%" y="783.50">polygon_io_crypto_playground`hyper::proto::..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::decode::Decoder::decode (103 samples, 26.82%)</title><rect x="72.9167%" y="757" width="26.8229%" height="15" fill="rgb(234,138,34)" fg:x="280" fg:w="103"/><text x="73.1667%" y="767.50">polygon_io_crypto_playground`hyper::proto::..</text></g><g><title>polygon_io_crypto_playground`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (103 samples, 26.82%)</title><rect x="72.9167%" y="741" width="26.8229%" height="15" fill="rgb(212,95,11)" fg:x="280" fg:w="103"/><text x="73.1667%" y="751.50">polygon_io_crypto_playground`&lt;hyper::proto:..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (99 samples, 25.78%)</title><rect x="73.9583%" y="725" width="25.7812%" height="15" fill="rgb(240,179,47)" fg:x="284" fg:w="99"/><text x="74.2083%" y="735.50">polygon_io_crypto_playground`hyper::proto..</text></g><g><title>polygon_io_crypto_playground`hyper::proto::h1::io::ReadStrategy::record (1 samples, 0.26%)</title><rect x="99.4792%" y="709" width="0.2604%" height="15" fill="rgb(240,163,11)" fg:x="382" fg:w="1"/><text x="99.7292%" y="719.50"></text></g><g><title>all (384 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="384"/><text x="0.2500%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (244 samples, 63.54%)</title><rect x="36.4583%" y="1093" width="63.5417%" height="15" fill="rgb(232,164,16)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1103.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (244 samples, 63.54%)</title><rect x="36.4583%" y="1077" width="63.5417%" height="15" fill="rgb(244,205,15)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1087.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>polygon_io_crypto_playground`std::sys::unix::thread::Thread::new::thread_start (244 samples, 63.54%)</title><rect x="36.4583%" y="1061" width="63.5417%" height="15" fill="rgb(223,117,47)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1071.50">polygon_io_crypto_playground`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>polygon_io_crypto_playground`core::ops::function::FnOnce::call_once{{vtable.shim}} (244 samples, 63.54%)</title><rect x="36.4583%" y="1045" width="63.5417%" height="15" fill="rgb(244,107,35)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1055.50">polygon_io_crypto_playground`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>polygon_io_crypto_playground`std::sys_common::backtrace::__rust_begin_short_backtrace (244 samples, 63.54%)</title><rect x="36.4583%" y="1029" width="63.5417%" height="15" fill="rgb(205,140,8)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1039.50">polygon_io_crypto_playground`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::blocking::pool::Inner::run (244 samples, 63.54%)</title><rect x="36.4583%" y="1013" width="63.5417%" height="15" fill="rgb(228,84,46)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1023.50">polygon_io_crypto_playground`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (244 samples, 63.54%)</title><rect x="36.4583%" y="997" width="63.5417%" height="15" fill="rgb(254,188,9)" fg:x="140" fg:w="244"/><text x="36.7083%" y="1007.50">polygon_io_crypto_playground`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>polygon_io_crypto_playground`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (241 samples, 62.76%)</title><rect x="37.2396%" y="981" width="62.7604%" height="15" fill="rgb(206,112,54)" fg:x="143" fg:w="241"/><text x="37.4896%" y="991.50">polygon_io_crypto_playground`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::F..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::run (241 samples, 62.76%)</title><rect x="37.2396%" y="965" width="62.7604%" height="15" fill="rgb(216,84,49)" fg:x="143" fg:w="241"/><text x="37.4896%" y="975.50">polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>polygon_io_crypto_playground`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (241 samples, 62.76%)</title><rect x="37.2396%" y="949" width="62.7604%" height="15" fill="rgb(214,194,35)" fg:x="143" fg:w="241"/><text x="37.4896%" y="959.50">polygon_io_crypto_playground`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::Context::run (241 samples, 62.76%)</title><rect x="37.2396%" y="933" width="62.7604%" height="15" fill="rgb(249,28,3)" fg:x="143" fg:w="241"/><text x="37.4896%" y="943.50">polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (158 samples, 41.15%)</title><rect x="58.8542%" y="917" width="41.1458%" height="15" fill="rgb(222,56,52)" fg:x="226" fg:w="158"/><text x="59.1042%" y="927.50">polygon_io_crypto_playground`tokio::runtime::scheduler::multi_threa..</text></g><g><title>polygon_io_crypto_playground`std::thread::local::LocalKey&lt;T&gt;::with (139 samples, 36.20%)</title><rect x="63.8021%" y="901" width="36.1979%" height="15" fill="rgb(245,217,50)" fg:x="245" fg:w="139"/><text x="64.0521%" y="911.50">polygon_io_crypto_playground`std::thread::local::LocalKey&lt;T..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (139 samples, 36.20%)</title><rect x="63.8021%" y="885" width="36.1979%" height="15" fill="rgb(213,201,24)" fg:x="245" fg:w="139"/><text x="64.0521%" y="895.50">polygon_io_crypto_playground`tokio::runtime::task::harness:..</text></g><g><title>polygon_io_crypto_playground`tokio::runtime::task::state::State::transition_to_running (1 samples, 0.26%)</title><rect x="99.7396%" y="869" width="0.2604%" height="15" fill="rgb(248,116,28)" fg:x="383" fg:w="1"/><text x="99.9896%" y="879.50"></text></g></svg></svg>